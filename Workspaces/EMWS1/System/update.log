NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1 
Traverser: Traverser invoked.  MPCONNECT command is sas. 
Traverser: Beginning flow traversal 
*------------------------------------------------------------* 
* 
* FIMPORT : Beginning Update 
* datetime : 07JAN2024:16:49:08 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134314     %let emexceptionString =;
134315     %let EMEXCEPTIONSTRING=;
134316     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
134317     * UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   * UPDATE: FIMPORT;
134318     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134319     %let EM_ACTION = UPDATE;
134320     %let syscc = 0;
134321     /* Fimport.source */
134322     %macro main;
134323           %if %upcase(&EM_ACTION) = CREATE %then %do;
134324              filename temp catalog 'sashelp.emsamp.Fimport_create.source';
134325              %include temp;
134326              filename temp;
134327              %create;
134328           %end;
134329           %else
134330           %if %upcase(&EM_ACTION) = TRAIN %then %do;
134331              filename temp catalog 'sashelp.emsamp.Fimport_train.source';
134332              %include temp;
134333              filename temp;
134334              %train;
134335           %end;
134336           %else
134337           %if %upcase(&EM_ACTION) = UPDATE %then %do;
134338              filename temp catalog 'sashelp.emsamp.Fimport_update.source';
134339              %include temp;
134340              filename temp;
134341              %update;
134342           %end;
134343           %else
134344           %if %upcase(&EM_ACTION) = PROPERTY %then %do;
134345              filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
134346              %include temp;
134347              filename temp;
134348              %property;
134349           %end;
134350            %else
134351           %if %upcase(&EM_ACTION) = SCORE %then %do;
134352              filename temp catalog 'sashelp.emsamp.Fimport_score.source';
134353              %include temp;
134354              filename temp;
134355              %score;
134356           %end;
134357           %else
134358           %if %upcase(&EM_ACTION) = REPORT %then %do;
134359              filename temp catalog 'sashelp.emsamp.Fimport_report.source';
134360              %include temp;
134361              filename temp;
134362              %report;
134363           %end;
134364           %else
134365           %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
134366              filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
134367              %include temp;
134368              filename temp;
134369              %openvariableset;
134370           %end;
134371           %else
134372           %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
134373              filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
134374              %include temp;
134375              filename temp;
134376              %closevariableset;
134377           %end;
134378     %mend main;
134379     %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emsamp.Fimport_update.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_UPDATE.SOURCE.
134380    +%macro update;
134381    +    %let oldrole = %str();
134382    +    data _null_;
134383    +       set &em_data_exportset;
134384    +       where NODEPORT='TRAIN';
134385    +       call symput('oldrole', ROLE);
134386    +    run;
134387    +    %if &oldrole ne &em_property_role %then %do;
134388    +        data &em_data_exportset;
134389    +           set &em_data_exportset;
134390    +           if NODEPORT='TRAIN' then do;
134391    +              ROLE="&em_property_role";
134392    +              NEEDUPDATE='Y';
134393    +              EXPORT='Y';
134394    +           end;
134395    +        run;
134396    +        filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
134397    +        data _null_;
134398    +           file x;
134399    +           put ' ';
134400    +        run;
134401    +        filename x;
134402    +    %end;
134403    +    %else %do;
134404    +        data &em_data_exportset;
134405    +           set &em_data_exportset;
134406    +           if NODEPORT='TRAIN' then do;
134407    +              ROLE="&em_property_role";
134408    +              NEEDUPDATE='Y';
134409    +              EXPORT='Y';
134410    +           end;
134411    +        run;
134412    +    %end;
134413    +
134414    +    %em_getname(key=EMCMETADEFAULT, type=DATA);
134415    +    %if %sysfunc(exist(&em_user_emcmetadefault)) and ^%sysfunc(exist(&em_lib..&em_nodeid._CMETA_TRAIN)) %then %do;
134416    +        data &em_lib..&em_nodeid._CMETA_TRAIN;
134417    +           set &em_user_emcmetadefault;
134418    +           drop DROP;
134419    +           where DROP='N';
134420    +        run;
134421    +    %end;
134422    +
134423    +%mend update;
134424    +
134425    +
134426    +
134427    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(UPDATE):   data _null_;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   where NODEPORT='TRAIN';
MPRINT(UPDATE):   call symput('oldrole', ROLE);
MPRINT(UPDATE):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
      WHERE NODEPORT='TRAIN';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):   data EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   if NODEPORT='TRAIN' then do;
MPRINT(UPDATE):   ROLE="TRAIN";
MPRINT(UPDATE):   NEEDUPDATE='Y';
MPRINT(UPDATE):   EXPORT='Y';
MPRINT(UPDATE):   end;
MPRINT(UPDATE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(UPDATE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134428     *------------------------------------------------------------*;
134429     * End UPDATE: FIMPORT;
134430     *------------------------------------------------------------*;

134431     %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\Desktop\NewProjectExam\Workspaces\EMWS1\FIMPORT\PROPERTIES.xml' encoding="UTF-8" NOBOM;
134433     %let _HPDMGRIDHOST=;
134434     %let _HPDMGRIDINSTALLLOC=;
134435     %let _HPDMGRIDDATASERVER=;
134436     %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* FIMPORT : End Update 
* datetime : 07JAN2024:16:49:08 
* 
*------------------------------------------------------------* 
Traverser: WaitingNode "HPDMFOREST" 
traverser_readyNode_note 
*------------------------------------------------------------* 
* 
* Part : Beginning Update 
* datetime : 07JAN2024:16:49:08 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):    data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\Desktop\NewProjectExam\Workspaces\EMWS1\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
134455     %let _HPDMGRIDHOST=;
134456     %let _HPDMGRIDINSTALLLOC=;
134457     %let _HPDMGRIDDATASERVER=;
134458     %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End Update 
* datetime : 07JAN2024:16:49:09 
* 
*------------------------------------------------------------* 
traverser_readyNode_note 
*------------------------------------------------------------* 
* 
* HPDMForest : Beginning Update 
* datetime : 07JAN2024:16:49:09 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):    data WORK.HPDMForest_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Days_Since_Last_Purchase(type=PROFIT label= Days_Since_Last_Purchase);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * HPDMForest: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * HPDMForest: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Days_Since_Last_Purchase(label="Days_Since_Last_Purchase");
MPRINT(EM_DECDATA):   length Days_Since_Last_Purchase 8 ;
MPRINT(EM_DECDATA):   label Days_Since_Last_Purchase= "Days Since Last Purchase" ;
MPRINT(EM_DECDATA):   Days_Since_Last_Purchase=9;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Days_Since_Last_Purchase=62;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Days_Since_Last_Purchase=27.0143884892086;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Days_Since_Last_Purchase(type=PROFIT label= Days_Since_Last_Purchase);
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Days_Since_Last_Purchase(type=PROFIT label= Days_Since_Last_Purchase);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
134784     data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
134785     length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
134786     TARGET="Days_Since_Last_Purchase";
MPRINT(EM_DIAGRAM):   TARGET="Days_Since_Last_Purchase";
134787     DECDATA="EMWS1.HPDMForest_Days_Since_Last__DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.HPDMForest_Days_Since_Last__DD";
134788     DECMETA="EMWS1.HPDMForest_Days_Since_Last__DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.HPDMForest_Days_Since_Last__DM";
134789     output;
MPRINT(EM_DIAGRAM):   output;
134790     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

134791     %let emexceptionString =;
134792     %let EMEXCEPTIONSTRING=;
134793     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134794     * UPDATE: HPDMForest;
MPRINT(EM_DIAGRAM):   * UPDATE: HPDMForest;
134795     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134796     %let EM_ACTION = UPDATE;
134797     %let syscc = 0;
134798     %macro main;
134799     
134800        %if %upcase(&EM_ACTION) = CREATE %then %do;
134801            filename temp catalog 'sashelp.hpdm.hpdmforest_create.source';
134802            %include temp;
134803            filename temp;
134804            %hpdm_Forest_create;
134805        %end;
134806        %else
134807        %if %upcase(&EM_ACTION) = TRAIN %then %do;
134808            filename temp catalog 'sashelp.hpdm.hpdmforest_train.source';
134809            %include temp;
134810            filename temp;
134811            %hpdm_Forest_train;
134812        %end;
134813        %else
134814        %if %upcase(&EM_ACTION) = SCORE %then %do;
134815            filename temp catalog 'sashelp.hpdm.hpdmforest_score.source';
134816            %include temp;
134817            filename temp;
134818            %hpdm_Forest_score;
134819        %end;
134820        %else
134821        %if %upcase(&EM_ACTION) = REPORT %then %do;
134822            filename temp catalog 'sashelp.hpdm.hpdmforest_report.source';
134823            %include temp;
134824            filename temp;
134825            %hpdm_Forest_report;
134826        %end;
134827        %else
134828     
134829     %mend main;
134830     
134831     %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
134832     
134833     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
134834     * End UPDATE: HPDMForest;
MPRINT(EM_DIAGRAM):   * End UPDATE: HPDMForest;
134835     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

134836     %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\Desktop\NewProjectExam\Workspaces\EMWS1\HPDMForest\PROPERTIES.xml' encoding="UTF-8" NOBOM;
134838     %let _HPDMGRIDHOST=;
134839     %let _HPDMGRIDINSTALLLOC=;
134840     %let _HPDMGRIDDATASERVER=;
134841     %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* HPDMForest : End Update 
* datetime : 07JAN2024:16:49:09 
* 
*------------------------------------------------------------* 
Traverser: Run Completed 
134842     proc printto;
MPRINT(EM_DIAGRAM):    proc printto;
134843     run;
MPRINT(EM_DIAGRAM):   run;

